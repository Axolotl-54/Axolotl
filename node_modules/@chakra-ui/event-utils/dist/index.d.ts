declare function addDomEvent(target: EventTarget, eventName: string, handler: EventListener, options?: AddEventListenerOptions): () => void;

declare type AnyPointerEvent = MouseEvent | TouchEvent | PointerEvent;
interface Point {
    x: number;
    y: number;
}
interface PointerEventInfo {
    point: Point;
}
interface MixedEventListener {
    (e: AnyPointerEvent, info: PointerEventInfo): void;
}
declare type PointType = "page" | "client";

declare function addPointerEvent(target: EventTarget, type: string, cb: MixedEventListener, options?: AddEventListenerOptions): () => void;

declare function isMouseEvent(event: any): event is MouseEvent;
declare function isTouchEvent(event: AnyPointerEvent): event is TouchEvent;
declare function isMultiTouchEvent(event: AnyPointerEvent): boolean;

declare function getEventPoint(event: AnyPointerEvent, type?: PointType): {
    x: number;
    y: number;
};

export { addDomEvent, addPointerEvent, getEventPoint, isMouseEvent, isMultiTouchEvent, isTouchEvent };
